<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>dmpayton.com</title><link>http://dmpayton.com</link><description></description><atom:link href="http://dmpayton.com/feeds/all.rss.xml" rel="self"></atom:link><lastBuildDate>Mon, 05 Mar 2012 00:00:00 -0000</lastBuildDate><item><title>Pelican Powered</title><link>http://dmpayton.com/pelican-powered.html</link><description>&lt;p&gt;So, I've hopped on the bandwagon and migrated my site to &lt;a class="reference external" href="http://pelican.readthedocs.org/"&gt;Pelican&lt;/a&gt; &amp;amp; &lt;a class="reference external" href="http://pages.github.com/"&gt;Github&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The great thing is that my previous posts -- all three of them -- were written in &lt;a class="reference external" href="http://daringfireball.net/projects/markdown/"&gt;Markdown&lt;/a&gt;, so migrating was a snap. Over the past few weeks I've developed a taste for &lt;a class="reference external" href="http://docutils.sourceforge.net/rst.html"&gt;reStructured Text&lt;/a&gt;, thanks to &lt;a class="reference external" href="http://sphinx.pocoo.org/"&gt;Sphinx&lt;/a&gt;, so I'll probably be using that from here on out.&lt;/p&gt;
&lt;p&gt;Don't get me wrong, I'm still a big fan of Heroku and will continue to use it for my future Django sites. However I think that Django + Heroku + S3 was a tad overkill for my needs and a statically generated site is a better fit.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Derek Payton</dc:creator><pubDate>Mon, 05 Mar 2012 00:00:00 -0000</pubDate><category>meta</category></item><item><title>Django Security Resources</title><link>http://dmpayton.com/django-security-resources.html</link><description>&lt;p&gt;Security is a complex beast and is not just limited to the application level (i.e., your Django project); there are several layers above and below your web app where a security hole could be disastrous for you or your users. Only a full security audit from a competent security professional can tell you if your site is secure.&lt;/p&gt;
&lt;p&gt;That said, I hope this post will help ensure your Django site is &lt;em&gt;reasonably&lt;/em&gt; secure. I am by no means an expert in web application security, and this post is as much for my own reference as it is for yours. I will try to keep this information up to date as time goes on. If you have any suggestions, &lt;a href="/"&gt;please let me know&lt;/a&gt;.&lt;/p&gt;
&lt;!-- **Last Updated: 2012-01-09** --&gt;

&lt;h2&gt;Literature&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://docs.djangoproject.com/en/dev/topics/security/"&gt;Django Documentation &amp;mdash; Security in Django&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.djangobook.com/en/2.0/chapter20/"&gt;The Django Book &amp;mdash; Chapter 20: Security&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Django Apps&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/dmpayton/django-admin-honeypot"&gt;django-admin-honeypot&lt;/a&gt; &amp;mdash; "A fake Django admin login screen to notify admins of attempted unauthorized access." &lt;span class="small light"&gt;(Disclaimer: I made this.)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/codekoala/django-axes"&gt;django-axes&lt;/a&gt; &amp;mdash; "A very simple way for you to keep track of failed login attempts, both for the Django admin and for the rest of your site." Useful for throttling login attempts and preventing brute-force password attacks.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://bitbucket.org/dwaiter/django-bcrypt"&gt;django-bcrypt&lt;/a&gt; &amp;mdash; "Makes it easy to use bcrypt to hash passwords with Django. &lt;a href="http://codahale.com/how-to-safely-store-a-password/"&gt;You should be using bcrypt.&lt;/a&gt;"&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/carljm/django-secure"&gt;django-secure&lt;/a&gt; &amp;mdash; "Helping you remember to do the stupid little things to improve your Django site's security."&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/paulosman/django-xframeoptions"&gt;django-xframeoptions&lt;/a&gt; &amp;mdash; Django middleware to add the &lt;code&gt;X-Frame-Options&lt;/code&gt; HTTP header to prevent clickjacking attacks.&lt;/p&gt;
&lt;h2&gt;Presentations&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://blip.tv/djangocon/advanced-security-topics-5573326"&gt;Advanced Security Topics, DjangoCon 2011&lt;/a&gt; [video] &amp;mdash; "An in-depth look (with demonstrations) at the how and why of several advanced security topics. Discussion of ways to improve security of the framework moving forward."&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.slideshare.net/levigross/django-web-application-security"&gt;Django Web Application Security
&lt;/a&gt; [slides]&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Derek Payton</dc:creator><pubDate>Mon, 09 Jan 2012 00:00:00 -0000</pubDate><category>django</category><category>security</category></item><item><title>New Years Python Meme 2011</title><link>http://dmpayton.com/new-years-python-meme-2011.html</link><description>&lt;p&gt;Thanks to &lt;a href="http://tarekziade.wordpress.com/2011/12/20/new-years-python-meme-2/"&gt;Tarek Ziade&lt;/a&gt; for kicking off this meme. It's neat to see people list out what they did in the old year and their plans for the new one.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1. What’s the coolest Python application, framework or library you have discovered in 2011?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://qtile.org"&gt;Qtile&lt;/a&gt;, although I technically discovered it sometime in 2010. I initially ran into installation issues and gave up, but Matt Harrison's excellent &lt;a href="http://www.youtube.com/watch?v=r_8om4dsEmw"&gt;PyCon 2011 Qtile Lightning Talk&lt;/a&gt; gave me the motivation to give it another go, and I've been using it since.&lt;/p&gt;
&lt;p&gt;I also have to mention &lt;a href="http://www.heroku.com/"&gt;Heroku&lt;/a&gt;, which I recently started deploying Django sites on. Although I've run into a couple issues, it's been really nice to work with overall. I think it's going to be my preferred deployment platform from now on.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. What new programming technique did you learn in 2011?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Unit testing. I wrote more -- though not enough by far -- tests this year. I definitely see the value of testing to prove that the code works, but I'm still not sold on TDD.&lt;/p&gt;
&lt;p&gt;Not really a programming technique, but I'm pretty stoked that I put my first packages onto PyPI this year (opposed to just throwing them up onto Github).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. What’s the name of the open source project you contributed the most in 2011? What did you do?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Most of my open source contributions were through my own &lt;a href="http://dmpayton.com/projects/"&gt;projects&lt;/a&gt; (everything on that page was released in 2011). I also made small contributions to &lt;a href="http://qtile.org"&gt;Qtile&lt;/a&gt;, &lt;a href="https://github.com/cuker/django-reportengine"&gt;django-reportengine&lt;/a&gt;, and &lt;a href="https://bitbucket.org/dancarroll/django-activitysync"&gt;django-activitysync&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4. What was the Python blog or website you read the most in 2011?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Everyone mentions &lt;a href="http://planet.python.org"&gt;Planet Python&lt;/a&gt;, which holds true for me as well. &lt;a href="https://www.djangoproject.com/community/"&gt;Django Community&lt;/a&gt; also adds a lot to my reader, and I spent a bit of time lurking in &lt;a href="http://www.reddit.com/r/python"&gt;r/Python&lt;/a&gt; and &lt;a href="http://www.reddit.com/r/django"&gt;r/Django&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5. What are the three top things you want to learn in 2012?&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="http://redis.io/"&gt;Redis&lt;/a&gt; -- I've toyed around with it, but I want to use it for something serious.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://craftyjs.com/"&gt;CraftyJS&lt;/a&gt; -- I've always wanted to try my hand at game development, and this looks like it could be fun.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.android.com/"&gt;Android&lt;/a&gt; -- I built &lt;a href="http://dmpayton.com/projects/kusc-android/"&gt;my first Android app&lt;/a&gt; this year, and I'd like to do more.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;6. What are the top software, app or lib you wish someone would write in 2012?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://glyph.twistedmatrix.com/"&gt;Glyph Lefkowitz&lt;/a&gt; gave this years &lt;em&gt;Why I Hate Django&lt;/em&gt; talk at DjangoCon (you should watch it, &lt;a href="http://blip.tv/djangocon/keynote-glyph-lefkowitz-5573264"&gt;it's most excellent&lt;/a&gt;). He argues that Python should be a bigger part of your infrastructure (even in places where it may not be the best solution) for a more cohesive architectural design.&lt;/p&gt;
&lt;p&gt;In the same vein, I want to see a dead-simple continuous integration server with git/hg/svn support and nice Github/Bitbucket integration. Essentially something like &lt;a href="http://integrityapp.com/"&gt;Integrity&lt;/a&gt;, but in Python and I want it to catch on in the community.&lt;/p&gt;
&lt;p&gt;(I realize that CI servers built in Python exist, but I haven't found one that meets all my requirements.)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Want to do your own list? Here’s how:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Copy-paste the questions and answer to them in your blog&lt;/li&gt;
&lt;li&gt;Tweet it with the &lt;strong&gt;&lt;a href="https://twitter.com/#!/search/%232012pythonmeme"&gt;#2012pythonmeme&lt;/a&gt;&lt;/strong&gt; hashtag&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Derek Payton</dc:creator><pubDate>Thu, 22 Dec 2011 00:00:00 -0000</pubDate><category>python</category><category>testing</category><category>django</category><category>qtile</category><category>heroku</category><category>2012</category><category>new-years</category></item><item><title>Hello World</title><link>http://dmpayton.com/hello-world.html</link><description>&lt;p&gt;I decided to revamp my site from a single static HTML page served by nginx to a Django-powered site hosted on Heroku.&lt;/p&gt;
&lt;p&gt;So, hello.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Derek Payton</dc:creator><pubDate>Mon, 12 Dec 2011 00:00:00 -0000</pubDate></item></channel></rss>